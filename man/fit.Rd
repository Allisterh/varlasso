% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{fit}
\alias{fit}
\title{Fit a varlasso model to multivariate time series data}
\usage{
fit(
  data,
  shared_q = NULL,
  shared_r = NULL,
  fixed_r = NULL,
  est_trend = FALSE,
  b_mu_diag = 0.7,
  b_sd_diag = 1,
  b_mu = 0,
  b_sd = 1,
  off_diag_prior = c("normal", "student-t", "laplace", "hs", "normal_pp"),
  prior_sigma_pro_mu = 0,
  prior_sigma_pro_sd = 2,
  prior_sigma_obs_mu = 0,
  prior_sigma_obs_sd = 2,
  nu = NULL,
  sigma_scale_df = 3,
  sigma_scale_sd = 2,
  global_scale = 0.1,
  slab_scale = 2.5,
  slab_df = 4,
  pars_to_monitor = NULL,
  iter = 1000,
  warmup = floor(iter/2),
  thin = 1,
  chains = 3,
  save_log_lik = FALSE,
  estimation = c("sampling", "optimizing", "vb"),
  est_hessian = FALSE,
  prior_only = FALSE,
  ...
)
}
\arguments{
\item{data}{The data, as a long format dataframe}

\item{shared_q}{Optional vector with
integers indicating which process variance parameters are shared; defaults
to constant process variances shared across species.}

\item{shared_r}{Optional vector with
integers indicating which observation variance parameters are shared;
defaults to shared observation variances across species.}

\item{fixed_r}{Optional scalar or vector of values to be passed in for a model
where observation error variances are not estimated. Defaults to NULL, and them being
estimated. Cannot be set to zero.}

\item{est_trend}{Whether or not to estimate a species-specific trend, defaults to FALSE}

\item{b_mu_diag}{Prior mean for diagonal elements. Can be vector or scalar}

\item{b_sd_diag}{Prior sd for diagonal elements. Can be vector or scalar}

\item{b_mu}{Prior mean for off diagonal elements, when Normal priors used.
Can be vector or scalar, defaults to 0}

\item{b_sd}{Prior sd for off diagonal elements, when Normal priors used.
Can be vector or scalar, defaults to 1}

\item{off_diag_prior}{Character string denoting which prior to use for
off-diagonal elements. Can be "normal" (independent priors estimated for each)
parameter, "normal_pp" (normal prior with partial pooling, where model is hierarchical with an
estimated standard deviation), "student-t" (hierarchical student-t model used with estimated scale
and df), "laplace" (double-exponential model used with estimated scale) or
"hs" (regularized horseshoe prior used, following parameterization in rstanarm)}

\item{prior_sigma_pro_mu}{Optional, prior mean for for process variance scale. The
prior is a Student-t, with default mu = 0}

\item{prior_sigma_pro_sd}{Optional, prior standard deviation for process variance scale. The
prior is a Student-t, with default sd = 2}

\item{prior_sigma_obs_mu}{Optional, prior mean for for observation variance scale. The
prior is a Student-t, with default mu = 0}

\item{prior_sigma_obs_sd}{Optional, prior standard deviation for observation variance scale. The
prior is a Student-t, with default sd = 2}

\item{nu}{Optional known parameter (df) for Student-t priors}

\item{sigma_scale_df}{Degrees of freedom for Student-t prior on scaling variance for Student-t and Laplace models, defaults to 3}

\item{sigma_scale_sd}{Standard deviation for Student-t prior on scaling variance for Student-t and Laplace models, defaults to 2}

\item{global_scale}{scale parameter for regularized horseshoe prior, defaults to 0.1}

\item{slab_scale}{scale parameter for regularized horseshoe prior, defaults to 2.5}

\item{slab_df}{df parameter for regularized horseshoe prior, defaults to 4}

\item{pars_to_monitor}{Optional string vector of which parameters to monitor. By default this is
NULL and only most important parameters are monitored (variances, B matrix, etc). This can be
the word "all", in which case all parameters are saved (this may be good for
loo::loo_moment_match() for example).}

\item{iter}{Number of MCMC iterations, defaults to 1000}

\item{warmup}{Warmup / burn in phase, defaults to 500}

\item{thin}{MCMC thin, defaults to 1}

\item{chains}{MCMC chains, defaults to 3}

\item{save_log_lik}{Whether to save log_lik, defaults to FALSE for speed}

\item{estimation}{Whether to do MCMC sampling ("sampling"; default), maximum posterior estimation
("optimizing") or Stan's variational algrotim ("vb")}

\item{est_hessian}{Whether to estimate hessian matrix if doing MAP estimation, defaults to FALSE}

\item{prior_only}{Whether to only generate samples from the prior distribution, defaults to FALSE}

\item{...}{Extra arguments to pass to sampling}
}
\value{
an object of class 'stanfit'
}
\description{
\code{fit} is the primary function for fitting models with varlasso.
}
\examples{
\donttest{

iter <- 50
warmup <- 20
thin <- 1
chains <- 1

n_ts <- 4
n_time <- 70
n_burn <- 50
xx <- matrix(0, n_time, n_ts)
set.seed(123)
xx[1, ] <- rnorm(n_ts)
B <- matrix(rnorm(n = n_ts * n_ts, mean = 0, sd = 0.1), n_ts, n_ts)
diag(B) <- runif(n_ts, min = 0.7, max = 0.9)

for (i in 2:n_time) {
  xx[i, ] <- B \%*\% xx[i - 1, ] + rnorm(n_ts, mean = 0, sd = 0.04)
}
xx <- xx[-c(1:n_burn), ]

yy <- xx + rnorm(n = nrow(xx) * ncol(xx), mean = 0, sd = 0.02)
df <- data.frame(
  "time" = rep(1:nrow(yy), ncol(yy)),
  "species" = sort(rep(1:ncol(yy), nrow(yy))),
  "y" = c(yy)
)

# fit basic model with normal independent priors
m <- fit(data = df, chains = chains, iter = iter, warmup = warmup, thin = thin)
# fit same model with shrinkage using student-t priors
m_t <- fit(
  data = df, chains = chains, iter = iter, warmup = warmup, thin = thin,
  off_diag_prior = "student-t"
)
# fit same model using student-t priors and known df
m_t_known <- fit(
  data = df, chains = chains, iter = iter, warmup = warmup, thin = thin,
  off_diag_prior = "student-t", nu = 4
)
# fit same model using laplace priors
m_lp <- fit(
  data = df, chains = chains, iter = iter, warmup = warmup, thin = thin,
  off_diag_prior = "laplace"
)
# fit same model using horseshoe priors
m_hs <- fit(
  data = df, chains = chains, iter = iter, warmup = warmup, thin = thin,
  off_diag_prior = "hs"
)

# include example for just sampling from priors
m <- fit(
  data = df, chains = chains, iter = iter,
  warmup = warmup, thin = thin, prior_only = TRUE
)
}
}
